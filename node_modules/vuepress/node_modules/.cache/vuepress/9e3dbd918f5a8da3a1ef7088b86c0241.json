{"remainingRequest":"/Users/vivi./Dev/myVuePressDoc/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/vivi./Dev/myVuePressDoc/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/vivi./Dev/myVuePressDoc/docs/divers/vimconfig.md?vue&type=template&id=d878ecb6&","dependencies":[{"path":"/Users/vivi./Dev/myVuePressDoc/docs/divers/vimconfig.md","mtime":1631613175238},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/cache-loader/dist/cjs.js","mtime":1660115262090},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/cache-loader/dist/cjs.js","mtime":1660115262090},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/babel-loader/lib/index.js","mtime":1660115261629},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1660115262578},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/cache-loader/dist/cjs.js","mtime":1660115262090},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/vue-loader/lib/index.js","mtime":1660115262578},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1660115261540}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"vimconfig\"><a class=\"header-anchor\" href=\"#vimconfig\" aria-hidden=\"true\">#</a> VimConfig</h1>\n<h1 id=\"the-ultimate-vimrc\"><a class=\"header-anchor\" href=\"#the-ultimate-vimrc\" aria-hidden=\"true\">#</a> The Ultimate vimrc</h1>\n<p>Over the last 8 years I have used and tweaked Vim. This is my Ultimate vimrc.</p>\n<p>There are two versions:</p>\n<ul>\n<li><strong>Basic</strong>: If you want something small just copy <a href=\"https://github.com/amix/vimrc/blob/master/vimrcs/basic.vim\" target=\"_blank\" rel=\"noopener noreferrer\">basic.vim<OutboundLink/></a> into your ~/.vimrc and you will have a great basic setup</li>\n<li><strong>Awesome</strong>: This includes a ton of useful plugins, color schemes and configurations</li>\n</ul>\n<p>I would of course recommend using the awesome version.c</p>\n<h2 id=\"how-to-install-the-awesome-version\"><a class=\"header-anchor\" href=\"#how-to-install-the-awesome-version\" aria-hidden=\"true\">#</a> How to install the Awesome version?</h2>\n<p>The awesome version includes a lot of great plugins, configurations and color schemes that make Vim a lot better. To install it simply do following:</p>\n<pre><code>git clone https://github.com/amix/vimrc.git ~/.vim_runtime\nsh ~/.vim_runtime/install_awesome_vimrc.sh\n</code></pre>\n<p>I also recommend using <a href=\"http://store1.adobe.com/cfusion/store/html/index.cfm?event=displayFontPackage&amp;code=1960\" target=\"_blank\" rel=\"noopener noreferrer\">Source Code Pro font from Adobe<OutboundLink/></a> (it's free and awesome font for writing and programming). The Awesome vimrc is already setup to try to use it</p>\n<h2 id=\"how-to-install-the-basic-version\"><a class=\"header-anchor\" href=\"#how-to-install-the-basic-version\" aria-hidden=\"true\">#</a> How to install the Basic version?</h2>\n<p>The basic version is basically just one file and no plugins. You can check out <a href=\"https://github.com/amix/vimrc/blob/master/vimrcs/basic.vim\" target=\"_blank\" rel=\"noopener noreferrer\">basic.vim<OutboundLink/></a>.</p>\n<p>This is useful to install on remote servers where you don't need many plugins and you don't do many edits.</p>\n<pre><code>git clone git://github.com/amix/vimrc.git ~/.vim_runtime\nsh ~/.vim_runtime/install_basic_vimrc.sh\n</code></pre>\n<h2 id=\"how-to-install-on-windows\"><a class=\"header-anchor\" href=\"#how-to-install-on-windows\" aria-hidden=\"true\">#</a> How to install on Windows?</h2>\n<p>Use <a href=\"http://msysgit.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">msysgit<OutboundLink/></a> to checkout the repository and run the installation instructions above. No special instructions needed ðŸ˜‰</p>\n<h2 id=\"how-to-install-on-linux\"><a class=\"header-anchor\" href=\"#how-to-install-on-linux\" aria-hidden=\"true\">#</a> How to install on Linux</h2>\n<p>If you have vim aliased as <code>vi</code> instead of <code>vim</code>, make sure to either alias it: <code>alias vi=vim</code>. Otherwise, <code>apt-get install vim</code>\n<code>git config --global core.editor vim</code> to make it by default for git.</p>\n<h2 id=\"how-to-update-to-latest-version\"><a class=\"header-anchor\" href=\"#how-to-update-to-latest-version\" aria-hidden=\"true\">#</a> How to update to latest version?</h2>\n<p>Simply just do a git rebase!</p>\n<pre><code>cd ~/.vim_runtime\ngit pull --rebase\n</code></pre>\n<h2 id=\"some-screenshots\"><a class=\"header-anchor\" href=\"#some-screenshots\" aria-hidden=\"true\">#</a> Some screenshots</h2>\n<p>Colors when editing a Python file:\n<img src=\"http://files1.wedoist.com/e952fdb343b1e617b90d256e474d0370/as/screenshot_1.png\" alt=\"Screenshot 1\"></p>\n<p>Opening recently opened files <a href=\"https://github.com/vim-scripts/mru.vim\" target=\"_blank\" rel=\"noopener noreferrer\">mru.vim<OutboundLink/></a>:\n<img src=\"http://files1.wedoist.com/1967b0e48af40e513d1a464e08196990/as/screenshot_2.png\" alt=\"Screenshot 2\"></p>\n<p><a href=\"https://github.com/scrooloose/nerdtree\" target=\"_blank\" rel=\"noopener noreferrer\">NERD Tree<OutboundLink/></a> plugin in a terminal window:\n<img src=\"http://files1.wedoist.com/b1509d7ed9e9f357e8d04797f9fad67b/as/screenshot3.png\" alt=\"Screenshot 3\"></p>\n<p>This vimrc even works on Windows!\n<img src=\"http://files1.wedoist.com/4e85163d97b81422240c822c82022f2f/as/screenshot_4.png\" alt=\"Screenshot 4\"></p>\n<p>Distraction free mode using <a href=\"https://github.com/junegunn/goyo.vim\" target=\"_blank\" rel=\"noopener noreferrer\">goyo.vim<OutboundLink/></a> and <a href=\"https://github.com/amix/vim-zenroom2\" target=\"_blank\" rel=\"noopener noreferrer\">vim-zenroom2<OutboundLink/></a>:\n<img src=\"https://d2dq6e731uoz0t.cloudfront.net/a5182977c3d6c2a6cd3f9e97398ca8ca/as/zen_mode.jpg\" alt=\"Screenshot 5\"></p>\n<h2 id=\"included-plugins\"><a class=\"header-anchor\" href=\"#included-plugins\" aria-hidden=\"true\">#</a> Included Plugins</h2>\n<p>I recommend reading the docs of these plugins to understand them better. Each of them provide a much better Vim experience!</p>\n<ul>\n<li><a href=\"https://github.com/tpope/vim-pathogen\" target=\"_blank\" rel=\"noopener noreferrer\">pathogen.vim<OutboundLink/></a>: Manages the runtime path of the plugins</li>\n<li><a href=\"https://github.com/garbas/vim-snipmate\" target=\"_blank\" rel=\"noopener noreferrer\">snipMate.vim<OutboundLink/></a>: snipMate.vim aims to be a concise vim script that implements some of TextMate's snippets features in Vim</li>\n<li><a href=\"https://github.com/vim-scripts/bufexplorer.zip\" target=\"_blank\" rel=\"noopener noreferrer\">bufexplorer.zip<OutboundLink/></a>: Buffer Explorer / Browser. This plugin can be opened with <code>&lt;leader+o&gt;</code></li>\n<li><a href=\"https://github.com/scrooloose/nerdtree\" target=\"_blank\" rel=\"noopener noreferrer\">NERD Tree<OutboundLink/></a>: A tree explorer plugin for vim</li>\n<li><a href=\"https://github.com/mileszs/ack.vim\" target=\"_blank\" rel=\"noopener noreferrer\">ack.vim<OutboundLink/></a>: Vim plugin for the Perl module / CLI script 'ack'</li>\n<li><a href=\"https://github.com/rking/ag.vim\" target=\"_blank\" rel=\"noopener noreferrer\">ag.vim<OutboundLink/></a>: A much faster Ack</li>\n<li><a href=\"https://github.com/ctrlpvim/ctrlp.vim\" target=\"_blank\" rel=\"noopener noreferrer\">ctrlp.vim<OutboundLink/></a>: Fuzzy file, buffer, mru and tag finder. In my config it's mapped to <code>&lt;Ctrl+F&gt;</code>, because <code>&lt;Ctrl+P&gt;</code> is used by YankRing</li>\n<li><a href=\"https://github.com/vim-scripts/mru.vim\" target=\"_blank\" rel=\"noopener noreferrer\">mru.vim<OutboundLink/></a>: Plugin to manage Most Recently Used (MRU) files. Includes my own fork which adds syntax highlighting to MRU. This plugin can be opened with <code>&lt;leader+f&gt;</code></li>\n<li><a href=\"https://github.com/amix/open_file_under_cursor.vim\" target=\"_blank\" rel=\"noopener noreferrer\">open_file_under_cursor.vim<OutboundLink/></a>: Open file under cursor when pressing <code>gf</code></li>\n<li><a href=\"https://github.com/michaeljsmith/vim-indent-object\" target=\"_blank\" rel=\"noopener noreferrer\">vim-indent-object<OutboundLink/></a>: Defines a new text object representing lines of code at the same indent level. Useful for python/vim scripts</li>\n<li><a href=\"https://github.com/terryma/vim-multiple-cursors\" target=\"_blank\" rel=\"noopener noreferrer\">vim-multiple-cursors<OutboundLink/></a>: Sublime Text style multiple selections for Vim, CTRL+N is remapped to CTRL+S (due to YankRing)</li>\n<li><a href=\"https://github.com/terryma/vim-expand-region\" target=\"_blank\" rel=\"noopener noreferrer\">vim-expand-region<OutboundLink/></a>: Allows you to visually select increasingly larger regions of text using the same key combination.</li>\n<li><a href=\"https://github.com/tpope/vim-fugitive\" target=\"_blank\" rel=\"noopener noreferrer\">vim-fugitive<OutboundLink/></a>: A Git wrapper so awesome, it should be illegal</li>\n<li><a href=\"https://github.com/junegunn/goyo.vim\" target=\"_blank\" rel=\"noopener noreferrer\">goyo.vim<OutboundLink/></a> and <a href=\"https://github.com/amix/vim-zenroom2\" target=\"_blank\" rel=\"noopener noreferrer\">vim-zenroom2<OutboundLink/></a>:\nRemove all clutter and focus only on the essential. Similar to iA Writer or Write Room <a href=\"http://amix.dk/blog/post/19744\" target=\"_blank\" rel=\"noopener noreferrer\">Read more here<OutboundLink/></a></li>\n<li><a href=\"https://github.com/tpope/vim-commentary\" target=\"_blank\" rel=\"noopener noreferrer\">vim-commentary<OutboundLink/></a>: Comment stuff out.  Use <code>gcc</code> to comment out a line (takes a count), <code>gc</code> to comment out the target of a motion. <code>gcu</code> uncomments a set of adjacent commented lines.</li>\n<li><a href=\"https://github.com/scrooloose/syntastic\" target=\"_blank\" rel=\"noopener noreferrer\">syntastic<OutboundLink/></a>: Syntax checking hacks for vim</li>\n<li><a href=\"https://github.com/maxbrunsfeld/vim-yankstack\" target=\"_blank\" rel=\"noopener noreferrer\">vim-yankstack<OutboundLink/></a>: Maintains a history of previous yanks, changes and deletes</li>\n<li><a href=\"https://github.com/itchyny/lightline.vim\" target=\"_blank\" rel=\"noopener noreferrer\">lightline.vim<OutboundLink/></a>: A light and configurable statusline/tabline for Vim</li>\n</ul>\n<h2 id=\"included-color-schemes\"><a class=\"header-anchor\" href=\"#included-color-schemes\" aria-hidden=\"true\">#</a> Included color schemes</h2>\n<ul>\n<li><a href=\"https://github.com/vim-scripts/peaksea\" target=\"_blank\" rel=\"noopener noreferrer\">peaksea<OutboundLink/></a>: My favorite!</li>\n<li><a href=\"https://github.com/altercation/vim-colors-solarized\" target=\"_blank\" rel=\"noopener noreferrer\">vim-colors-solarized<OutboundLink/></a></li>\n<li><a href=\"https://github.com/wgibbs/vim-irblack\" target=\"_blank\" rel=\"noopener noreferrer\">vim-irblack<OutboundLink/></a></li>\n<li><a href=\"https://github.com/vim-scripts/mayansmoke\" target=\"_blank\" rel=\"noopener noreferrer\">mayansmoke<OutboundLink/></a></li>\n<li><a href=\"https://github.com/therubymug/vim-pyte\" target=\"_blank\" rel=\"noopener noreferrer\">vim-pyte<OutboundLink/></a></li>\n</ul>\n<h2 id=\"included-modes\"><a class=\"header-anchor\" href=\"#included-modes\" aria-hidden=\"true\">#</a> Included modes</h2>\n<ul>\n<li><a href=\"https://github.com/kchmck/vim-coffee-script\" target=\"_blank\" rel=\"noopener noreferrer\">vim-coffee-script<OutboundLink/></a></li>\n<li><a href=\"https://github.com/groenewege/vim-less\" target=\"_blank\" rel=\"noopener noreferrer\">vim-less<OutboundLink/></a></li>\n<li><a href=\"https://github.com/sophacles/vim-bundle-mako\" target=\"_blank\" rel=\"noopener noreferrer\">vim-bundle-mako<OutboundLink/></a></li>\n<li><a href=\"https://github.com/tpope/vim-markdown\" target=\"_blank\" rel=\"noopener noreferrer\">vim-markdown<OutboundLink/></a></li>\n<li><a href=\"https://github.com/vim-scripts/nginx.vim\" target=\"_blank\" rel=\"noopener noreferrer\">nginx.vim<OutboundLink/></a>: Highlights configuration files for nginx</li>\n<li><a href=\"https://github.com/fatih/vim-go\" target=\"_blank\" rel=\"noopener noreferrer\">vim-go<OutboundLink/></a></li>\n</ul>\n<h2 id=\"how-to-include-your-own-stuff\"><a class=\"header-anchor\" href=\"#how-to-include-your-own-stuff\" aria-hidden=\"true\">#</a> How to include your own stuff?</h2>\n<p>After you have installed the setup you can create <strong>~/.vim_runtime/my_configs.vim</strong> to fill in any configurations that are important for you. For instance, my <strong>my_configs.vim</strong> looks like this:</p>\n<pre><code>~/.vim_runtime (master)&gt; cat my_configs.vim\nmap &lt;leader&gt;ct :cd ~/Desktop/Todoist/todoist&lt;cr&gt;\nmap &lt;leader&gt;cw :cd ~/Desktop/Wedoist/wedoist&lt;cr&gt; \n</code></pre>\n<p>You can also install your own plugins, for instance, via pathogen we can install <a href=\"https://github.com/tpope/vim-rails\" target=\"_blank\" rel=\"noopener noreferrer\">vim-rails<OutboundLink/></a>:</p>\n<pre><code>cd ~/.vim_runtime\ngit clone git://github.com/tpope/vim-rails.git sources_non_forked/vim-rails\n</code></pre>\n<p>Now you have vim-rails installed ðŸ˜‰</p>\n<h2 id=\"key-mappings\"><a class=\"header-anchor\" href=\"#key-mappings\" aria-hidden=\"true\">#</a> Key Mappings</h2>\n<h3 id=\"plugin-related-mappings\"><a class=\"header-anchor\" href=\"#plugin-related-mappings\" aria-hidden=\"true\">#</a> Plugin related mappings</h3>\n<p>Open <a href=\"https://github.com/vim-scripts/bufexplorer.zip\" target=\"_blank\" rel=\"noopener noreferrer\">bufexplorer<OutboundLink/></a> and see and manage the current buffers (<code>&lt;leader&gt;o</code>):</p>\n<pre><code>map &lt;leader&gt;o :BufExplorer&lt;cr&gt;\n</code></pre>\n<p>Open <a href=\"https://github.com/vim-scripts/mru.vim\" target=\"_blank\" rel=\"noopener noreferrer\">MRU.vim<OutboundLink/></a> and see the recently open files (<code>&lt;leader&gt;f</code>):</p>\n<pre><code>map &lt;leader&gt;f :MRU&lt;CR&gt;\n</code></pre>\n<p>Open <a href=\"https://github.com/kien/ctrlp.vim\" target=\"_blank\" rel=\"noopener noreferrer\">ctrlp.vim<OutboundLink/></a> plugin (<code>&lt;leader&gt;j</code> or <code>&lt;ctrl&gt;f</code>):</p>\n<pre><code>let g:ctrlp_map = '&lt;c-f&gt;'\n</code></pre>\n<p>Managing the <a href=\"https://github.com/scrooloose/nerdtree\" target=\"_blank\" rel=\"noopener noreferrer\">NERD Tree<OutboundLink/></a> plugin:</p>\n<pre><code>map &lt;leader&gt;nn :NERDTreeToggle&lt;cr&gt;\nmap &lt;leader&gt;nb :NERDTreeFromBookmark \nmap &lt;leader&gt;nf :NERDTreeFind&lt;cr&gt;\n</code></pre>\n<p><a href=\"https://github.com/junegunn/goyo.vim\" target=\"_blank\" rel=\"noopener noreferrer\">goyo.vim<OutboundLink/></a> and <a href=\"https://github.com/amix/vim-zenroom2\" target=\"_blank\" rel=\"noopener noreferrer\">vim-zenroom2<OutboundLink/></a> lets you only focus on one thing at a time. It removes all the distractions and centers the content. It has a special look when editing Markdown, reStructuredText and textfiles. It only has one mapping. (<code>&lt;leader&gt;z</code>)</p>\n<pre><code>map &lt;leader&gt;z :Goyo&lt;cr&gt;\n</code></pre>\n<h3 id=\"normal-mode-mappings\"><a class=\"header-anchor\" href=\"#normal-mode-mappings\" aria-hidden=\"true\">#</a> Normal mode mappings</h3>\n<p>Fast saving of a buffer (<code>&lt;leader&gt;w</code>):</p>\n<pre><code>nmap &lt;leader&gt;w :w!&lt;cr&gt;\n</code></pre>\n<p>Map <code>&lt;Space&gt;</code> to <code>/</code> (search) and <code>&lt;Ctrl&gt;+&lt;Space&gt;</code> to <code>?</code> (backwards search):</p>\n<pre><code>map &lt;space&gt; /\nmap &lt;c-space&gt; ?\nmap &lt;silent&gt; &lt;leader&gt;&lt;cr&gt; :noh&lt;cr&gt;\n</code></pre>\n<p>Disable highlight when <code>&lt;leader&gt;&lt;cr&gt;</code> is pressed:</p>\n<pre><code>map &lt;silent&gt; &lt;leader&gt;&lt;cr&gt; :noh&lt;cr&gt;\n</code></pre>\n<p>Smart way to move between windows (<code>&lt;ctrl&gt;j</code> etc.):</p>\n<pre><code>map &lt;C-j&gt; &lt;C-W&gt;j\nmap &lt;C-k&gt; &lt;C-W&gt;k\nmap &lt;C-h&gt; &lt;C-W&gt;h\nmap &lt;C-l&gt; &lt;C-W&gt;l\n</code></pre>\n<p>Closing of current buffer(s) (<code>&lt;leader&gt;bd</code> and (<code>&lt;leader&gt;ba</code>)):</p>\n<pre><code>&quot; Close current buffer\nmap &lt;leader&gt;bd :Bclose&lt;cr&gt;\n\n&quot; Close all buffers\nmap &lt;leader&gt;ba :1,1000 bd!&lt;cr&gt;\n</code></pre>\n<p>Useful mappings for managing tabs:</p>\n<pre><code>map &lt;leader&gt;tn :tabnew&lt;cr&gt;\nmap &lt;leader&gt;to :tabonly&lt;cr&gt;\nmap &lt;leader&gt;tc :tabclose&lt;cr&gt;\nmap &lt;leader&gt;tm :tabmove \n\n&quot; Opens a new tab with the current buffer's path\n&quot; Super useful when editing files in the same directory\nmap &lt;leader&gt;te :tabedit &lt;c-r&gt;=expand(&quot;%:p:h&quot;)&lt;cr&gt;/\n</code></pre>\n<p>Switch CWD to the directory of the open buffer:</p>\n<pre><code>map &lt;leader&gt;cd :cd %:p:h&lt;cr&gt;:pwd&lt;cr&gt;\n</code></pre>\n<p>Open vimgrep and put the cursor in the right position:</p>\n<pre><code>map &lt;leader&gt;g :vimgrep // **/*.&lt;left&gt;&lt;left&gt;&lt;left&gt;&lt;left&gt;&lt;left&gt;&lt;left&gt;&lt;left&gt;\n</code></pre>\n<p>Vimgreps in the current file:</p>\n<pre><code>map &lt;leader&gt;&lt;space&gt; :vimgrep // &lt;C-R&gt;%&lt;C-A&gt;&lt;right&gt;&lt;right&gt;&lt;right&gt;&lt;right&gt;&lt;right&gt;&lt;right&gt;&lt;right&gt;&lt;right&gt;&lt;right&gt;\n</code></pre>\n<p>Remove the Windows ^M - when the encodings gets messed up:</p>\n<pre><code>noremap &lt;leader&gt;m mmHmt:%s/&lt;C-V&gt;&lt;cr&gt;//ge&lt;cr&gt;'tzt'm\n</code></pre>\n<p>Quickly open a buffer for scripbble:</p>\n<pre><code>map &lt;leader&gt;q :e ~/buffer&lt;cr&gt;\n</code></pre>\n<p>Toggle paste mode on and off:</p>\n<pre><code>map &lt;leader&gt;pp :setlocal paste!&lt;cr&gt;\n</code></pre>\n<h3 id=\"insert-mode-mappings\"><a class=\"header-anchor\" href=\"#insert-mode-mappings\" aria-hidden=\"true\">#</a> Insert mode mappings</h3>\n<p>Quickly insert parenthesis/brackets/etc.:</p>\n<pre><code>inoremap $1 ()&lt;esc&gt;i\ninoremap $2 []&lt;esc&gt;i\ninoremap $3 {}&lt;esc&gt;i\ninoremap $4 {&lt;esc&gt;o}&lt;esc&gt;O\ninoremap $q ''&lt;esc&gt;i\ninoremap $e &quot;&quot;&lt;esc&gt;i\ninoremap $t &lt;&gt;&lt;esc&gt;i\n</code></pre>\n<p>Insert the current date and time (useful for timestamps):</p>\n<pre><code>iab xdate &lt;c-r&gt;=strftime(&quot;%d/%m/%y %H:%M:%S&quot;)&lt;cr&gt;\n</code></pre>\n<h3 id=\"visual-mode-mappings\"><a class=\"header-anchor\" href=\"#visual-mode-mappings\" aria-hidden=\"true\">#</a> Visual mode mappings</h3>\n<p>Visual mode pressing <code>*</code> or <code>#</code> searches for the current selection:</p>\n<pre><code>vnoremap &lt;silent&gt; * :call VisualSelection('f')&lt;CR&gt;\nvnoremap &lt;silent&gt; # :call VisualSelection('b')&lt;CR&gt;\n</code></pre>\n<p>When you press gv you vimgrep after the selected text:</p>\n<pre><code>vnoremap &lt;silent&gt; gv :call VisualSelection('gv')&lt;CR&gt;\n</code></pre>\n<p>When you press <code>&lt;leader&gt;r</code> you can search and replace the selected text:</p>\n<pre><code>vnoremap &lt;silent&gt; &lt;leader&gt;r :call VisualSelection('replace')&lt;CR&gt;\n</code></pre>\n<p>Surround the visual selection in parenthesis/brackets/etc.:</p>\n<pre><code>vnoremap $1 &lt;esc&gt;`&gt;a)&lt;esc&gt;`&lt;i(&lt;esc&gt;\nvnoremap $2 &lt;esc&gt;`&gt;a]&lt;esc&gt;`&lt;i[&lt;esc&gt;\nvnoremap $3 &lt;esc&gt;`&gt;a}&lt;esc&gt;`&lt;i{&lt;esc&gt;\nvnoremap $$ &lt;esc&gt;`&gt;a&quot;&lt;esc&gt;`&lt;i&quot;&lt;esc&gt;\nvnoremap $q &lt;esc&gt;`&gt;a'&lt;esc&gt;`&lt;i'&lt;esc&gt;\nvnoremap $e &lt;esc&gt;`&gt;a&quot;&lt;esc&gt;`&lt;i&quot;&lt;esc&gt;\n</code></pre>\n<h3 id=\"command-line-mappings\"><a class=\"header-anchor\" href=\"#command-line-mappings\" aria-hidden=\"true\">#</a> Command line mappings</h3>\n<p>$q is super useful when browsing on the command line. It deletes everything until the last slash:</p>\n<pre><code>cno $q &lt;C-\\&gt;eDeleteTillSlash()&lt;cr&gt;\n</code></pre>\n<p>Bash like keys for the command line:</p>\n<pre><code>cnoremap &lt;C-A&gt;\t\t&lt;Home&gt;\ncnoremap &lt;C-E&gt;\t\t&lt;End&gt;\ncnoremap &lt;C-K&gt;\t\t&lt;C-U&gt;\n\ncnoremap &lt;C-P&gt; &lt;Up&gt;\ncnoremap &lt;C-N&gt; &lt;Down&gt;\n</code></pre>\n<p>Write the file as sudo (only on Unix). Super useful when you open a file and you don't have permissions to save your changes. <a href=\"http://vim.wikia.com/wiki/Su-write\" target=\"_blank\" rel=\"noopener noreferrer\">Vim tip<OutboundLink/></a>:</p>\n<pre><code>:W \n</code></pre>\n<h3 id=\"spell-checking\"><a class=\"header-anchor\" href=\"#spell-checking\" aria-hidden=\"true\">#</a> Spell checking</h3>\n<p>Pressing <code>&lt;leader&gt;ss</code> will toggle and untoggle spell checking</p>\n<pre><code>map &lt;leader&gt;ss :setlocal spell!&lt;cr&gt;\n</code></pre>\n<p>Shortcuts using <code>&lt;leader&gt;</code> instead of special chars</p>\n<pre><code>map &lt;leader&gt;sn ]s\nmap &lt;leader&gt;sp [s\nmap &lt;leader&gt;sa zg\nmap &lt;leader&gt;s? z=\n</code></pre>\n<h3 id=\"cope\"><a class=\"header-anchor\" href=\"#cope\" aria-hidden=\"true\">#</a> Cope</h3>\n<p>Do :help cope if you are unsure what cope is. It's super useful!</p>\n<p>When you search with vimgrep, display your results in cope by doing:\n<code>&lt;leader&gt;cc</code></p>\n<p>To go to the next search result do:\n<code>&lt;leader&gt;n</code></p>\n<p>To go to the previous search results do:\n<code>&lt;leader&gt;p</code></p>\n<p>Vimscript mappings:</p>\n<pre><code>map &lt;leader&gt;cc :botright cope&lt;cr&gt;\nmap &lt;leader&gt;co ggVGy:tabnew&lt;cr&gt;:set syntax=qf&lt;cr&gt;pgg\nmap &lt;leader&gt;n :cn&lt;cr&gt;\nmap &lt;leader&gt;p :cp&lt;cr&gt;\n</code></pre>\n<h2 id=\"how-to-uninstall\"><a class=\"header-anchor\" href=\"#how-to-uninstall\" aria-hidden=\"true\">#</a> How to uninstall</h2>\n<p>Do following:</p>\n<ul>\n<li>Remove <code>~/.vim_runtime</code></li>\n<li>Remove any lines that refernce <code>.vim_runtime</code> in your <code>~/.vimrc</code></li>\n</ul>\n</div>\n",null]}