{"remainingRequest":"/Users/vivi./Dev/myVuePressDoc/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/vivi./Dev/myVuePressDoc/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/vivi./Dev/myVuePressDoc/docs/divers/ffmpeggif.md?vue&type=template&id=6211c342&","dependencies":[{"path":"/Users/vivi./Dev/myVuePressDoc/docs/divers/ffmpeggif.md","mtime":1632218797410},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/cache-loader/dist/cjs.js","mtime":1660115262090},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/cache-loader/dist/cjs.js","mtime":1660115262090},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/babel-loader/lib/index.js","mtime":1660115261629},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1660115262578},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/cache-loader/dist/cjs.js","mtime":1660115262090},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/vue-loader/lib/index.js","mtime":1660115262578},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1660115261540}],"contextDependencies":[],"result":["\n<div class=\"content\"><h2 id=\"gif-anime\"><a class=\"header-anchor\" href=\"#gif-anime\" aria-hidden=\"true\">#</a> gif anim√©</h2>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>ffmpeg -framerate 24 -i &quot;%06d.png&quot; -filter_complex &quot;[0:v] fps=24,scale=w=640:h=-1,split [a][b];[a] palettegen=stats_mode=single [p];[b][p] paletteuse=new=1&quot; -f gif output.gif\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"convertir-video-to-gif\"><a class=\"header-anchor\" href=\"#convertir-video-to-gif\" aria-hidden=\"true\">#</a> Convertir video to gif</h2>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>ffmpeg -i input.flv -ss 00:00:00.000 -pix_fmt rgb24 -r 10 -s 320x240 -t 00:00:10.000 output.gif\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>ffmpeg -ss 30 -t 3 -i input.mp4 -vf &quot;fps=10,scale=320:-1:flags=lanczos,split[s0][s1];[s0]palettegen[p];[s1][p]paletteuse&quot; -loop 0 output.gif\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><ul>\n<li>This example will skip the first 30 seconds (<code>-ss 30</code>) of the input and create a 3 second output (<code>-t 3</code>).</li>\n<li><a href=\"https://ffmpeg.org/ffmpeg-filters.html#fps\" target=\"_blank\" rel=\"noopener noreferrer\">fps<OutboundLink/></a> filter sets the frame rate. A rate of 10 frames per second is used in the example.</li>\n<li><a href=\"https://ffmpeg.org/ffmpeg-filters.html#scale\" target=\"_blank\" rel=\"noopener noreferrer\">scale<OutboundLink/></a> filter will resize the output to 320 pixels wide and automatically determine the height while preserving the aspect ratio. The lanczos <a href=\"https://ffmpeg.org/ffmpeg-scaler.html\" target=\"_blank\" rel=\"noopener noreferrer\">scaling algorithm<OutboundLink/></a> is used in this example.</li>\n<li><a href=\"https://ffmpeg.org/ffmpeg-filters.html#palettegen\" target=\"_blank\" rel=\"noopener noreferrer\">palettegen<OutboundLink/></a> and <a href=\"https://ffmpeg.org/ffmpeg-filters.html#paletteuse\" target=\"_blank\" rel=\"noopener noreferrer\">paletteuse<OutboundLink/></a> filters will generate and use a custom palette generated from your input. These filters have many options, so refer to the links for a list of all available options and values. Also see the <strong>Advanced options</strong> section below.</li>\n<li><a href=\"https://ffmpeg.org/ffmpeg-filters.html#split\" target=\"_blank\" rel=\"noopener noreferrer\">split<OutboundLink/></a> filter will allow everything to be done in one command and avoids having to create a temporary PNG file of the palette.</li>\n<li>Control looping with <code>-loop</code> output option but the values are confusing. A value of <code>0</code> is infinite looping, <code>-1</code> is no looping, and <code>1</code> will loop once meaning it will play twice. So a value of 10 will cause the GIF to play 11 times.</li>\n</ul>\n</div>\n",null]}