{"remainingRequest":"/Users/vivi./Dev/myVuePressDoc/node_modules/cache-loader/dist/cjs.js??ref--3-0!/Users/vivi./Dev/myVuePressDoc/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/vivi./Dev/myVuePressDoc/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/vivi./Dev/myVuePressDoc/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/vivi./Dev/myVuePressDoc/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/vivi./Dev/myVuePressDoc/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/vivi./Dev/myVuePressDoc/docs/symfony/lesattributsphp8danssymfony.md?vue&type=template&id=1bb5926e&","dependencies":[{"path":"/Users/vivi./Dev/myVuePressDoc/docs/symfony/lesattributsphp8danssymfony.md","mtime":1632144881638},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/cache-loader/dist/cjs.js","mtime":1660115262090},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/cache-loader/dist/cjs.js","mtime":1660115262090},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/babel-loader/lib/index.js","mtime":1660115261629},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1660115262578},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/cache-loader/dist/cjs.js","mtime":1660115262090},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/vue-loader/lib/index.js","mtime":1660115262578},{"path":"/Users/vivi./Dev/myVuePressDoc/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1660115261540}],"contextDependencies":[],"result":["var render = function render() {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"div\", {\n    staticClass: \"content\"\n  }, [_vm._m(0), _c(\"p\", [_vm._v(\"Utilisation des attributs PHP 8 à la place des annotations.\")]), _vm._m(1), _vm._m(2), _c(\"hr\"), _c(\"p\", [_vm._v(\"Avec sa 8ème version, PHP a introduit une nouveauté assez attendue : \"), _c(\"a\", {\n    attrs: {\n      href: \"https://www.php.net/manual/fr/language.attributes.overview.php\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_vm._v(\"les attributs\"), _c(\"OutboundLink\")], 1), _vm._v(\".\")]), _c(\"p\", [_vm._v(\"Cette fonctionnalité permet de définir des métadonnées dans votre code. Ces méta données peuvent ensuite être lues grâce à l'\"), _c(\"a\", {\n    attrs: {\n      href: \"https://www.php.net/manual/fr/book.reflection.php\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_vm._v(\"API de Reflection\"), _c(\"OutboundLink\")], 1), _vm._v(\" de PHP.\")]), _vm._m(3), _vm._m(4), _c(\"hr\"), _vm._m(5), _c(\"p\", [_vm._v(\"Les annotations commencent par \"), _c(\"code\", [_vm._v(\"@\")]), _vm._v(\" et se place dans un docblock. \"), _c(\"a\", {\n    attrs: {\n      href: \"https://www.doctrine-project.org/projects/doctrine-annotations/en/1.10/index.html\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_vm._v(\"Un parser écrit en PHP\"), _c(\"OutboundLink\")], 1), _vm._v(\" lit ces annotations en parsant le fichier \"), _c(\"code\", [_vm._v(\".php\")]), _vm._v(\" pour en extraire les méta données.\")]), _vm._m(6), _vm._m(7), _vm._m(8), _vm._m(9), _c(\"hr\"), _c(\"p\", [_vm._v(\"Dans un projet Symfony, il y a plusieurs endroits où vous pouvez avoir à écrire des annotations. Vous pouvez les utilisez pour \"), _c(\"a\", {\n    attrs: {\n      href: \"https://symfony.com/doc/current/bundles/SensioFrameworkExtraBundle/annotations/routing.html\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_vm._v(\"déclarer une route\"), _c(\"OutboundLink\")], 1), _vm._v(\", pour configurer \"), _c(\"a\", {\n    attrs: {\n      href: \"https://symfony.com/doc/current/bundles/SensioFrameworkExtraBundle/annotations/converters.html\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_vm._v(\"la conversion de paramètres\"), _c(\"OutboundLink\")], 1), _vm._v(\", pour décrire une \"), _c(\"a\", {\n    attrs: {\n      href: \"https://symfony.com/doc/current/bundles/SensioFrameworkExtraBundle/annotations/security.html\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_vm._v(\"règle de sécurité\"), _c(\"OutboundLink\")], 1), _vm._v(\" ou pour configurer \"), _c(\"a\", {\n    attrs: {\n      href: \"https://symfony.com/doc/current/validation.html\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_vm._v(\"des contraintes de validations\"), _c(\"OutboundLink\")], 1), _vm._v(\" par exemple. Si vous utilisez \"), _c(\"a\", {\n    attrs: {\n      href: \"https://www.doctrine-project.org/\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_vm._v(\"Doctrine\"), _c(\"OutboundLink\")], 1), _vm._v(\" vous pouvez également les utiliser pour déclarer votre mapping d'ORM.\")]), _vm._m(10), _vm._m(11), _c(\"p\", [_vm._v(\"Certain outils comme \"), _c(\"a\", {\n    attrs: {\n      href: \"https://getrector.org/blog/2020/11/30/smooth-upgrade-to-php-8-in-diffs#12-symfony-annotations-to-attributes\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_vm._v(\"Rector permettent de migrer automatiquement les annotations vers des attributs\"), _c(\"OutboundLink\")], 1), _vm._v(\".\")]), _vm._m(12), _c(\"p\", [_vm._v(\"Dans les contrôleurs, globalement y a pas grand chose qui change, vous pouvez utiliser les annotations existantes en attributs avec quasiment la même syntaxe :\")]), _vm._m(13), _c(\"p\", [_vm._v(\"Pour plus de détails, reportez vous aux différentes documentations qui intêgrent désormais, en plus des exemples d'anotations, leurs équivalents avec les attributs.\")]), _vm._m(14), _vm._m(15), _c(\"hr\"), _c(\"p\", [_vm._v(\"Comme pour le reste des annotations fournies par Symfony, vous pouvez réutiliser la plupart des contraintes de validations en attributs :\")]), _vm._m(16), _c(\"p\", [_vm._v(\"Ça se gâte lorsque vous souhaitez utiliser des contraintes de validations imbriquées comme avec \"), _c(\"a\", {\n    attrs: {\n      href: \"https://symfony.com/doc/current/reference/constraints/AtLeastOneOf.html\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_vm._v(\"AtLeastOneOf\"), _c(\"OutboundLink\")], 1), _vm._v(\", \"), _c(\"a\", {\n    attrs: {\n      href: \"https://symfony.com/doc/current/reference/constraints/All.html\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_vm._v(\"All\"), _c(\"OutboundLink\")], 1), _vm._v(\" ou \"), _c(\"a\", {\n    attrs: {\n      href: \"https://symfony.com/doc/current/reference/constraints/Collection.html\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_vm._v(\"Collection\"), _c(\"OutboundLink\")], 1), _vm._v(\" par exemple.\")]), _vm._m(17), _vm._m(18), _c(\"p\", [_c(\"a\", {\n    attrs: {\n      href: \"https://github.com/symfony/symfony/issues/38503\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_vm._v(\"Une issue est ouverte sur le GitHub de Symfony\"), _c(\"OutboundLink\")], 1), _vm._v(\" sur ce sujet. La conclusion est qu'il faut \"), _c(\"strong\", [_vm._v(\"attendre une évolution des attributs dans une prochaine version de PHP\")]), _vm._v(\" pour pouvoir instancier des objets dans les attributs et utiliser une syntaxe de ce style :\")]), _vm._m(19), _c(\"p\", [_vm._v(\"En attendant, la solution la plus simple pour ce genre de cas est de créer une contrainte custom. Ceci a été rendu très simple depuis l'ajout de la contrainte \"), _c(\"a\", {\n    attrs: {\n      href: \"https://symfony.com/doc/current/reference/constraints/Compound.html\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_c(\"code\", [_vm._v(\"Compound\")]), _c(\"OutboundLink\")], 1), _vm._v(\".\")]), _c(\"p\", [_vm._v(\"En PHP, pas de limitation, vous pouvez imbriquer les contraintes comme vous le souhaitez :\")]), _vm._m(20), _vm._m(21), _c(\"p\", [_vm._v(\"Vous pouvez ensuite ajouter votre contrainte en tant qu'attribut :\")]), _vm._m(22), _c(\"p\", [_vm._v(\"Cette solution, bien que nécessitant de créer une classe, vous permet de regrouper vos contraintes dans un ensemble réutilisable. Si vous vous essayez au DDD c'est une solution intéressante car elle permet de lier un concept métier à ce groupe de contraintes.\")]), _vm._m(23), _c(\"hr\"), _c(\"p\", [_vm._v(\"Plus récemment est sortie \"), _c(\"a\", {\n    attrs: {\n      href: \"https://www.doctrine-project.org/2021/05/24/orm2.9.html\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }\n  }, [_vm._v(\"Doctrine 2.9\"), _c(\"OutboundLink\")], 1), _vm._v(\" proposant le mapping via les attributs.\")]), _vm._m(24), _c(\"p\", [_vm._v(\"Comme Symfony, Doctrine réutilise les mêmes classes que pour leur annotations pour leur attributs.\")]), _vm._m(25), _c(\"p\", [_vm._v(\"Avec les annotations (imbriquées) :\")]), _vm._m(26), _c(\"p\", [_vm._v(\"Avec les attributs (au même niveau) :\")]), _vm._m(27), _vm._m(28), _c(\"hr\"), _c(\"p\", [_vm._v(\"Les attributs offrent une nouvelle alternative aux annotations. Natifs, ils sont plus rapides et ne nécessitent pas de code tier pour être interprété.\")])]);\n};\n\nvar staticRenderFns = [function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"h1\", {\n    attrs: {\n      id: \"les-attributs-php-8-dans-symfony\"\n    }\n  }, [_c(\"a\", {\n    staticClass: \"header-anchor\",\n    attrs: {\n      href: \"#les-attributs-php-8-dans-symfony\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" Les attributs PHP 8 dans Symfony\")]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"ol\", [_c(\"li\", [_vm._v(\"Les attributs PHP 8\")]), _c(\"li\", [_vm._v(\"Annotation vs. Attributs\")]), _c(\"li\", [_vm._v(\"Dans Symfony\")]), _c(\"li\", [_vm._v(\"Les contraintes de validation\")]), _c(\"li\", [_vm._v(\"Doctrine\")]), _c(\"li\", [_vm._v(\"Conclusion\")])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"h2\", {\n    attrs: {\n      id: \"les-attributs-php-8\"\n    }\n  }, [_c(\"a\", {\n    staticClass: \"header-anchor\",\n    attrs: {\n      href: \"#les-attributs-php-8\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" Les attributs PHP 8\")]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"p\", [_vm._v(\"Concrêtement, \"), _c(\"strong\", [_vm._v(\"les attributs répondent aux mêmes besoins et s'utilisent globalement de la même façon que les annotations\")]), _vm._v(\", mais en natif.\")]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"h2\", {\n    attrs: {\n      id: \"annotation-vs-attributs\"\n    }\n  }, [_c(\"a\", {\n    staticClass: \"header-anchor\",\n    attrs: {\n      href: \"#annotation-vs-attributs\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" Annotation vs. Attributs\")]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"p\", [_c(\"strong\", [_vm._v(\"Quelles sont donc les différences entre les annotations et les attributs ?\")])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"div\", {\n    staticClass: \"language- extra-class\"\n  }, [_c(\"pre\", {\n    pre: true,\n    attrs: {\n      class: \"language-text\"\n    }\n  }, [_c(\"code\", [_vm._v(\"use App\\\\MetaData\\\\Foobar;\\n\\nclass Foo\\n{\\n  /**\\n   * @Foobar\\n   */\\n  private string $foobar\\n}\\n\")])])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"p\", [_vm._v(\"Les attributs ont une syntaxe un peu différente mais s'utilisent de la même façon au détail près qu'il s'agit d'une \"), _c(\"strong\", [_vm._v(\"fonctionnalité native de PHP\")]), _vm._v(\". Il n'y a donc pas besoin de parser tiers, les attributs sont interprétés par PHP en même temps que le reste du code.\")]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"div\", {\n    staticClass: \"language- extra-class\"\n  }, [_c(\"pre\", {\n    pre: true,\n    attrs: {\n      class: \"language-text\"\n    }\n  }, [_c(\"code\", [_vm._v(\"use App\\\\MetaData\\\\Foobar;\\n\\nclass Foo\\n{\\n  #[Foobar]\\n  private string $foobar\\n}\\n\")])])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"h2\", {\n    attrs: {\n      id: \"dans-symfony\"\n    }\n  }, [_c(\"a\", {\n    staticClass: \"header-anchor\",\n    attrs: {\n      href: \"#dans-symfony\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" Dans Symfony\")]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"p\", [_vm._v(\"Et bien il est désormais possible \"), _c(\"strong\", [_vm._v(\"d'utiliser des attributs à la place des annotations\")]), _vm._v(\" pour faire tout cela, ou presque.\")]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"p\", [_vm._v(\"De façon générale, dans Symfony, il est assez aisé de migrer des annotations vers les attributs car souvent \"), _c(\"strong\", [_vm._v(\"les classes utilisées pour décrire les annotations sont les mêmes que pour les attributs\")]), _vm._v(\".\")]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"h2\", {\n    attrs: {\n      id: \"dans-les-controleurs\"\n    }\n  }, [_c(\"a\", {\n    staticClass: \"header-anchor\",\n    attrs: {\n      href: \"#dans-les-controleurs\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" Dans les contrôleurs\")]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"div\", {\n    staticClass: \"language- extra-class\"\n  }, [_c(\"pre\", {\n    pre: true,\n    attrs: {\n      class: \"language-text\"\n    }\n  }, [_c(\"code\", [_vm._v(\"use Symfony\\\\Component\\\\Routing\\\\Annotation\\\\Route;\\n\\nclass DefaultController extends AbstractController\\n{\\n  #[Route('/', methods: ['GET'], name: \\\"homepage\\\")]\\n  public function homepage()\\n  {\\n  }\\n\\n  #[Route('/foobar/{foo_id}/{bar_id}')]\\n  #[ParamConverter('foo', options: ['mapping' => ['foo_id' => 'id']])]\\n  #[ParamConverter('bar', options: ['mapping' => ['bar_id' => 'id']])]\\n  public function foobar(Foo $foo, Bar $bar)\\n  {\\n  }\\n\\n  #[Route('/article/{article_slug}')]\\n  #[Entity('article', expr: 'repository.findOneBySlug(article_slug)')]\\n  public function article(Article $article)\\n  {\\n  }\\n\\n  #[IsGranted('ROLE_ADMIN')]\\n  public function admin()\\n  {\\n  }\\n\\n  #[Security(\\\"is_granted('ROLE_ADMIN') and is_granted('ROLE_SUPER_ADMIN')\\\")]\\n  public function dashboard()\\n  {\\n  }\\n}\\n\")])])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"p\", [_c(\"img\", {\n    attrs: {\n      src: \"https://www.elao.com/images/posts/2021/php-attributes-symfony/symfony-attributes-doc.png\",\n      alt: \"Les attributs PHP dans Symfony\",\n      title: \"Les attributs PHP dans Symfony\"\n    }\n  })]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"h2\", {\n    attrs: {\n      id: \"les-contraintes-de-validation\"\n    }\n  }, [_c(\"a\", {\n    staticClass: \"header-anchor\",\n    attrs: {\n      href: \"#les-contraintes-de-validation\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" Les contraintes de validation\")]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"div\", {\n    staticClass: \"language- extra-class\"\n  }, [_c(\"pre\", {\n    pre: true,\n    attrs: {\n      class: \"language-text\"\n    }\n  }, [_c(\"code\", [_vm._v(\"use Symfony\\\\Component\\\\Validator\\\\Constraints as Assert;\\n\\nclass Foobar\\n{\\n  #[Assert\\\\NotBlank]\\n  #[Assert\\\\Type('string')]\\n  #[Assert\\\\Length(min: 2, max: 40)]\\n  private string $name;\\n}\\n\")])])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"div\", {\n    staticClass: \"language- extra-class\"\n  }, [_c(\"pre\", {\n    pre: true,\n    attrs: {\n      class: \"language-text\"\n    }\n  }, [_c(\"code\", [_vm._v('use Symfony\\\\Component\\\\Validator\\\\Constraints as Assert;\\n\\nclass Foobar\\n{\\n  /**\\n   * @Assert\\\\All({\\n   *   @Assert\\\\NotBlank,\\n   *   @Assert\\\\Length(min=3)\\n   * })\\n   */\\n  protected $things = [];\\n\\n  /**\\n   * @Assert\\\\Collection(fields={\\n   *   \"email\"={\\n   *     @Assert\\\\NotBlank,\\n   *     @Assert\\\\Email\\n   *   },\\n   *   \"description\"={\\n   *     @Assert\\\\NotBlank,\\n   *     @Assert\\\\Length(min=10, max=255, message=\"Lorem ipsum\")\\n   *   }\\n   * })\\n   */\\n  protected $contact;\\n}\\n')])])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"p\", [_vm._v(\"En effet, \"), _c(\"strong\", [_vm._v(\"les attributs PHP ne peuvent pas s'imbriquer\")]), _vm._v(\", il n'est donc pas possible de reproduire cette configuration avec les attributs.\")]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"div\", {\n    staticClass: \"language- extra-class\"\n  }, [_c(\"pre\", {\n    pre: true,\n    attrs: {\n      class: \"language-text\"\n    }\n  }, [_c(\"code\", [_vm._v(\"use Symfony\\\\Component\\\\Validator\\\\Constraints as Assert;\\n\\nclass Foobar\\n{\\n  #[Assert\\\\Collection(fields: [\\n    'email' => [\\n      new Assert\\\\NotBlank,\\n      new Assert\\\\Email,\\n    ],\\n    'description' => [\\n      new Assert\\\\NotBlank,\\n      new Assert\\\\Length(min: 10, max: 255, message: \\\"Lorem ipsum\\\")\\n    ]\\n  ]]\\n  protected $contact;\\n}\\n\")])])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"div\", {\n    staticClass: \"language- extra-class\"\n  }, [_c(\"pre\", {\n    pre: true,\n    attrs: {\n      class: \"language-text\"\n    }\n  }, [_c(\"code\", [_vm._v(\"namespace App\\\\Validator\\\\Constraints;\\n\\nuse Symfony\\\\Component\\\\Validator\\\\Constraints as Assert\\\\Assert;\\n\\n#[\\\\Attribute(\\\\Attribute::TARGET_PROPERTY | \\\\Attribute::TARGET_METHOD | \\\\Attribute::IS_REPEATABLE)]\\nclass Contact extends Compound\\n{\\n  protected function getConstraints(array $options): array\\n  {\\n    return [\\n      new Assert\\\\Collection([\\n        'fields' => [\\n          'email' => [\\n            new Assert\\\\NotBlank(),\\n            new Assert\\\\Email(),\\n          ],\\n          'description' => [\\n            new Assert\\\\NotBlank(),\\n            new Assert\\\\Length(['min' => 10, 'max' => 255, 'message' => \\\"Lorem ipsum\\\"]),\\n          ],\\n        ],\\n      ]),\\n    ];\\n  }\\n}\\n\")])])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"p\", [_vm._v(\"Attention à bien configurer votre contrainte en tant qu'attribute \"), _c(\"code\", [_vm._v(\"#[\\\\Attribute()]\")]), _vm._v(\" et la bonne combinaison de constantes.\")]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"div\", {\n    staticClass: \"language- extra-class\"\n  }, [_c(\"pre\", {\n    pre: true,\n    attrs: {\n      class: \"language-text\"\n    }\n  }, [_c(\"code\", [_vm._v(\"use App\\\\Validator\\\\Constraints;\\n\\nclass Foobar\\n{\\n  #[Constraints/Contact]\\n  protected $contact;\\n}\\n\")])])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"h2\", {\n    attrs: {\n      id: \"doctrine\"\n    }\n  }, [_c(\"a\", {\n    staticClass: \"header-anchor\",\n    attrs: {\n      href: \"#doctrine\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" Doctrine\")]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"div\", {\n    staticClass: \"language- extra-class\"\n  }, [_c(\"pre\", {\n    pre: true,\n    attrs: {\n      class: \"language-text\"\n    }\n  }, [_c(\"code\", [_vm._v(\"use Doctrine\\\\DBAL\\\\Types\\\\Types;\\nuse Doctrine\\\\ORM\\\\Mapping AS ORM;\\n\\n#[ORM\\\\Entity(repositoryClass: PostRepository::class)]\\nclass Foobar\\n{\\n  #[ORM\\\\Column(type: Types::INTEGER)]\\n  #[ORM\\\\Id, ORM\\\\GeneratedValue(strategy: 'AUTO')]\\n  private ?int $id;\\n\\n  #[ORM\\\\Column(type: Types::BOOLEAN)]\\n  private bool $active = false;\\n\\n  #[ORM\\\\Column(type: Types::SIMPLE_ARRAY)]\\n  private array $contents = [];\\n\\n  #[ORM\\\\ManyToOne(targetEntity: User::class)]\\n  public $owner;\\n}\\n\")])])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"p\", [_vm._v(\"Doctrine fait également face à l'impossibilité d'imbriquer les attributs comme cela était fait avec les annotations \"), _c(\"code\", [_vm._v(\"@JoinTable\")]), _vm._v(\" ou \"), _c(\"code\", [_vm._v(\"@JoinColumns\")]), _vm._v(\" mais a résolu cela en créant de nouveaux attributs à placer au même niveau.\")]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"div\", {\n    staticClass: \"language- extra-class\"\n  }, [_c(\"pre\", {\n    pre: true,\n    attrs: {\n      class: \"language-text\"\n    }\n  }, [_c(\"code\", [_vm._v('class Post\\n{\\n  /**\\n   * @ManyToMany(targetEntity=\"Tag\")\\n   * @JoinTable(name=\"post_tags\",\\n   *   joinColumns={\\n   *     @JoinColumn(name=\"post_id\", referencedColumnName=\"id\")\\n   *   },\\n   *   inverseJoinColumns={\\n   *     @JoinColumn(name=\"tag_id\", referencedColumnName=\"id\")\\n   *   }\\n   * )\\n   */\\n   public Collection $tags;\\n}\\n')])])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"div\", {\n    staticClass: \"language- extra-class\"\n  }, [_c(\"pre\", {\n    pre: true,\n    attrs: {\n      class: \"language-text\"\n    }\n  }, [_c(\"code\", [_vm._v('class Post\\n{\\n  #[ORM\\\\ManyToMany(targetEntity: Tag::class)]\\n  #[ORM\\\\JoinTable(name: \"post_tags\")]\\n  #[ORM\\\\JoinColumn(name: \"post_id\", referencedColumnName: \"id\")]\\n  #[ORM\\\\InverseJoinColumn(name: \"tag_id\", referencedColumnName: \"id\")]\\n  public Collection $tags;\\n}\\n')])])]);\n}, function () {\n  var _vm = this,\n      _c = _vm._self._c;\n\n  return _c(\"h2\", {\n    attrs: {\n      id: \"conclusion\"\n    }\n  }, [_c(\"a\", {\n    staticClass: \"header-anchor\",\n    attrs: {\n      href: \"#conclusion\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\" Conclusion\")]);\n}];\nrender._withStripped = true;\nexport { render, staticRenderFns };",{"version":3,"sources":["docs/symfony/lesattributsphp8danssymfony.md"],"names":["render","_vm","_c","_self","staticClass","_m","_v","attrs","href","target","rel","staticRenderFns","id","pre","class","src","alt","title","_withStripped"],"mappings":"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","sourceRoot":"/Users/vivi./Dev/myVuePressDoc","sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _c(\"p\", [\n      _vm._v(\"Utilisation des attributs PHP 8 à la place des annotations.\"),\n    ]),\n    _vm._m(1),\n    _vm._m(2),\n    _c(\"hr\"),\n    _c(\"p\", [\n      _vm._v(\n        \"Avec sa 8ème version, PHP a introduit une nouveauté assez attendue : \"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://www.php.net/manual/fr/language.attributes.overview.php\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [_vm._v(\"les attributs\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\".\"),\n    ]),\n    _c(\"p\", [\n      _vm._v(\n        \"Cette fonctionnalité permet de définir des métadonnées dans votre code. Ces méta données peuvent ensuite être lues grâce à l'\"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://www.php.net/manual/fr/book.reflection.php\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [_vm._v(\"API de Reflection\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" de PHP.\"),\n    ]),\n    _vm._m(3),\n    _vm._m(4),\n    _c(\"hr\"),\n    _vm._m(5),\n    _c(\"p\", [\n      _vm._v(\"Les annotations commencent par \"),\n      _c(\"code\", [_vm._v(\"@\")]),\n      _vm._v(\" et se place dans un docblock. \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://www.doctrine-project.org/projects/doctrine-annotations/en/1.10/index.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [_vm._v(\"Un parser écrit en PHP\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" lit ces annotations en parsant le fichier \"),\n      _c(\"code\", [_vm._v(\".php\")]),\n      _vm._v(\" pour en extraire les méta données.\"),\n    ]),\n    _vm._m(6),\n    _vm._m(7),\n    _vm._m(8),\n    _vm._m(9),\n    _c(\"hr\"),\n    _c(\"p\", [\n      _vm._v(\n        \"Dans un projet Symfony, il y a plusieurs endroits où vous pouvez avoir à écrire des annotations. Vous pouvez les utilisez pour \"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://symfony.com/doc/current/bundles/SensioFrameworkExtraBundle/annotations/routing.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [_vm._v(\"déclarer une route\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\", pour configurer \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://symfony.com/doc/current/bundles/SensioFrameworkExtraBundle/annotations/converters.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [_vm._v(\"la conversion de paramètres\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\", pour décrire une \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://symfony.com/doc/current/bundles/SensioFrameworkExtraBundle/annotations/security.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [_vm._v(\"règle de sécurité\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" ou pour configurer \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://symfony.com/doc/current/validation.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [_vm._v(\"des contraintes de validations\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" par exemple. Si vous utilisez \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://www.doctrine-project.org/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [_vm._v(\"Doctrine\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\n        \" vous pouvez également les utiliser pour déclarer votre mapping d'ORM.\"\n      ),\n    ]),\n    _vm._m(10),\n    _vm._m(11),\n    _c(\"p\", [\n      _vm._v(\"Certain outils comme \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://getrector.org/blog/2020/11/30/smooth-upgrade-to-php-8-in-diffs#12-symfony-annotations-to-attributes\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [\n          _vm._v(\n            \"Rector permettent de migrer automatiquement les annotations vers des attributs\"\n          ),\n          _c(\"OutboundLink\"),\n        ],\n        1\n      ),\n      _vm._v(\".\"),\n    ]),\n    _vm._m(12),\n    _c(\"p\", [\n      _vm._v(\n        \"Dans les contrôleurs, globalement y a pas grand chose qui change, vous pouvez utiliser les annotations existantes en attributs avec quasiment la même syntaxe :\"\n      ),\n    ]),\n    _vm._m(13),\n    _c(\"p\", [\n      _vm._v(\n        \"Pour plus de détails, reportez vous aux différentes documentations qui intêgrent désormais, en plus des exemples d'anotations, leurs équivalents avec les attributs.\"\n      ),\n    ]),\n    _vm._m(14),\n    _vm._m(15),\n    _c(\"hr\"),\n    _c(\"p\", [\n      _vm._v(\n        \"Comme pour le reste des annotations fournies par Symfony, vous pouvez réutiliser la plupart des contraintes de validations en attributs :\"\n      ),\n    ]),\n    _vm._m(16),\n    _c(\"p\", [\n      _vm._v(\n        \"Ça se gâte lorsque vous souhaitez utiliser des contraintes de validations imbriquées comme avec \"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://symfony.com/doc/current/reference/constraints/AtLeastOneOf.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [_vm._v(\"AtLeastOneOf\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\", \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://symfony.com/doc/current/reference/constraints/All.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [_vm._v(\"All\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" ou \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://symfony.com/doc/current/reference/constraints/Collection.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [_vm._v(\"Collection\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" par exemple.\"),\n    ]),\n    _vm._m(17),\n    _vm._m(18),\n    _c(\"p\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/symfony/symfony/issues/38503\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [\n          _vm._v(\"Une issue est ouverte sur le GitHub de Symfony\"),\n          _c(\"OutboundLink\"),\n        ],\n        1\n      ),\n      _vm._v(\" sur ce sujet. La conclusion est qu'il faut \"),\n      _c(\"strong\", [\n        _vm._v(\n          \"attendre une évolution des attributs dans une prochaine version de PHP\"\n        ),\n      ]),\n      _vm._v(\n        \" pour pouvoir instancier des objets dans les attributs et utiliser une syntaxe de ce style :\"\n      ),\n    ]),\n    _vm._m(19),\n    _c(\"p\", [\n      _vm._v(\n        \"En attendant, la solution la plus simple pour ce genre de cas est de créer une contrainte custom. Ceci a été rendu très simple depuis l'ajout de la contrainte \"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://symfony.com/doc/current/reference/constraints/Compound.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [_c(\"code\", [_vm._v(\"Compound\")]), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\".\"),\n    ]),\n    _c(\"p\", [\n      _vm._v(\n        \"En PHP, pas de limitation, vous pouvez imbriquer les contraintes comme vous le souhaitez :\"\n      ),\n    ]),\n    _vm._m(20),\n    _vm._m(21),\n    _c(\"p\", [\n      _vm._v(\n        \"Vous pouvez ensuite ajouter votre contrainte en tant qu'attribut :\"\n      ),\n    ]),\n    _vm._m(22),\n    _c(\"p\", [\n      _vm._v(\n        \"Cette solution, bien que nécessitant de créer une classe, vous permet de regrouper vos contraintes dans un ensemble réutilisable. Si vous vous essayez au DDD c'est une solution intéressante car elle permet de lier un concept métier à ce groupe de contraintes.\"\n      ),\n    ]),\n    _vm._m(23),\n    _c(\"hr\"),\n    _c(\"p\", [\n      _vm._v(\"Plus récemment est sortie \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://www.doctrine-project.org/2021/05/24/orm2.9.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n          },\n        },\n        [_vm._v(\"Doctrine 2.9\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" proposant le mapping via les attributs.\"),\n    ]),\n    _vm._m(24),\n    _c(\"p\", [\n      _vm._v(\n        \"Comme Symfony, Doctrine réutilise les mêmes classes que pour leur annotations pour leur attributs.\"\n      ),\n    ]),\n    _vm._m(25),\n    _c(\"p\", [_vm._v(\"Avec les annotations (imbriquées) :\")]),\n    _vm._m(26),\n    _c(\"p\", [_vm._v(\"Avec les attributs (au même niveau) :\")]),\n    _vm._m(27),\n    _vm._m(28),\n    _c(\"hr\"),\n    _c(\"p\", [\n      _vm._v(\n        \"Les attributs offrent une nouvelle alternative aux annotations. Natifs, ils sont plus rapides et ne nécessitent pas de code tier pour être interprété.\"\n      ),\n    ]),\n  ])\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"h1\", { attrs: { id: \"les-attributs-php-8-dans-symfony\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#les-attributs-php-8-dans-symfony\",\n            \"aria-hidden\": \"true\",\n          },\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Les attributs PHP 8 dans Symfony\"),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"ol\", [\n      _c(\"li\", [_vm._v(\"Les attributs PHP 8\")]),\n      _c(\"li\", [_vm._v(\"Annotation vs. Attributs\")]),\n      _c(\"li\", [_vm._v(\"Dans Symfony\")]),\n      _c(\"li\", [_vm._v(\"Les contraintes de validation\")]),\n      _c(\"li\", [_vm._v(\"Doctrine\")]),\n      _c(\"li\", [_vm._v(\"Conclusion\")]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"h2\", { attrs: { id: \"les-attributs-php-8\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#les-attributs-php-8\", \"aria-hidden\": \"true\" },\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Les attributs PHP 8\"),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"p\", [\n      _vm._v(\"Concrêtement, \"),\n      _c(\"strong\", [\n        _vm._v(\n          \"les attributs répondent aux mêmes besoins et s'utilisent globalement de la même façon que les annotations\"\n        ),\n      ]),\n      _vm._v(\", mais en natif.\"),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"h2\", { attrs: { id: \"annotation-vs-attributs\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#annotation-vs-attributs\", \"aria-hidden\": \"true\" },\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Annotation vs. Attributs\"),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"p\", [\n      _c(\"strong\", [\n        _vm._v(\n          \"Quelles sont donc les différences entre les annotations et les attributs ?\"\n        ),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"use App\\\\MetaData\\\\Foobar;\\n\\nclass Foo\\n{\\n  /**\\n   * @Foobar\\n   */\\n  private string $foobar\\n}\\n\"\n          ),\n        ]),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"p\", [\n      _vm._v(\n        \"Les attributs ont une syntaxe un peu différente mais s'utilisent de la même façon au détail près qu'il s'agit d'une \"\n      ),\n      _c(\"strong\", [_vm._v(\"fonctionnalité native de PHP\")]),\n      _vm._v(\n        \". Il n'y a donc pas besoin de parser tiers, les attributs sont interprétés par PHP en même temps que le reste du code.\"\n      ),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"use App\\\\MetaData\\\\Foobar;\\n\\nclass Foo\\n{\\n  #[Foobar]\\n  private string $foobar\\n}\\n\"\n          ),\n        ]),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"h2\", { attrs: { id: \"dans-symfony\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#dans-symfony\", \"aria-hidden\": \"true\" },\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Dans Symfony\"),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"p\", [\n      _vm._v(\"Et bien il est désormais possible \"),\n      _c(\"strong\", [\n        _vm._v(\"d'utiliser des attributs à la place des annotations\"),\n      ]),\n      _vm._v(\" pour faire tout cela, ou presque.\"),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"p\", [\n      _vm._v(\n        \"De façon générale, dans Symfony, il est assez aisé de migrer des annotations vers les attributs car souvent \"\n      ),\n      _c(\"strong\", [\n        _vm._v(\n          \"les classes utilisées pour décrire les annotations sont les mêmes que pour les attributs\"\n        ),\n      ]),\n      _vm._v(\".\"),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"h2\", { attrs: { id: \"dans-les-controleurs\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#dans-les-controleurs\", \"aria-hidden\": \"true\" },\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Dans les contrôleurs\"),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"use Symfony\\\\Component\\\\Routing\\\\Annotation\\\\Route;\\n\\nclass DefaultController extends AbstractController\\n{\\n  #[Route('/', methods: ['GET'], name: \\\"homepage\\\")]\\n  public function homepage()\\n  {\\n  }\\n\\n  #[Route('/foobar/{foo_id}/{bar_id}')]\\n  #[ParamConverter('foo', options: ['mapping' => ['foo_id' => 'id']])]\\n  #[ParamConverter('bar', options: ['mapping' => ['bar_id' => 'id']])]\\n  public function foobar(Foo $foo, Bar $bar)\\n  {\\n  }\\n\\n  #[Route('/article/{article_slug}')]\\n  #[Entity('article', expr: 'repository.findOneBySlug(article_slug)')]\\n  public function article(Article $article)\\n  {\\n  }\\n\\n  #[IsGranted('ROLE_ADMIN')]\\n  public function admin()\\n  {\\n  }\\n\\n  #[Security(\\\"is_granted('ROLE_ADMIN') and is_granted('ROLE_SUPER_ADMIN')\\\")]\\n  public function dashboard()\\n  {\\n  }\\n}\\n\"\n          ),\n        ]),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: {\n          src: \"https://www.elao.com/images/posts/2021/php-attributes-symfony/symfony-attributes-doc.png\",\n          alt: \"Les attributs PHP dans Symfony\",\n          title: \"Les attributs PHP dans Symfony\",\n        },\n      }),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"h2\", { attrs: { id: \"les-contraintes-de-validation\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#les-contraintes-de-validation\",\n            \"aria-hidden\": \"true\",\n          },\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Les contraintes de validation\"),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"use Symfony\\\\Component\\\\Validator\\\\Constraints as Assert;\\n\\nclass Foobar\\n{\\n  #[Assert\\\\NotBlank]\\n  #[Assert\\\\Type('string')]\\n  #[Assert\\\\Length(min: 2, max: 40)]\\n  private string $name;\\n}\\n\"\n          ),\n        ]),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            'use Symfony\\\\Component\\\\Validator\\\\Constraints as Assert;\\n\\nclass Foobar\\n{\\n  /**\\n   * @Assert\\\\All({\\n   *   @Assert\\\\NotBlank,\\n   *   @Assert\\\\Length(min=3)\\n   * })\\n   */\\n  protected $things = [];\\n\\n  /**\\n   * @Assert\\\\Collection(fields={\\n   *   \"email\"={\\n   *     @Assert\\\\NotBlank,\\n   *     @Assert\\\\Email\\n   *   },\\n   *   \"description\"={\\n   *     @Assert\\\\NotBlank,\\n   *     @Assert\\\\Length(min=10, max=255, message=\"Lorem ipsum\")\\n   *   }\\n   * })\\n   */\\n  protected $contact;\\n}\\n'\n          ),\n        ]),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"p\", [\n      _vm._v(\"En effet, \"),\n      _c(\"strong\", [_vm._v(\"les attributs PHP ne peuvent pas s'imbriquer\")]),\n      _vm._v(\n        \", il n'est donc pas possible de reproduire cette configuration avec les attributs.\"\n      ),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"use Symfony\\\\Component\\\\Validator\\\\Constraints as Assert;\\n\\nclass Foobar\\n{\\n  #[Assert\\\\Collection(fields: [\\n    'email' => [\\n      new Assert\\\\NotBlank,\\n      new Assert\\\\Email,\\n    ],\\n    'description' => [\\n      new Assert\\\\NotBlank,\\n      new Assert\\\\Length(min: 10, max: 255, message: \\\"Lorem ipsum\\\")\\n    ]\\n  ]]\\n  protected $contact;\\n}\\n\"\n          ),\n        ]),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"namespace App\\\\Validator\\\\Constraints;\\n\\nuse Symfony\\\\Component\\\\Validator\\\\Constraints as Assert\\\\Assert;\\n\\n#[\\\\Attribute(\\\\Attribute::TARGET_PROPERTY | \\\\Attribute::TARGET_METHOD | \\\\Attribute::IS_REPEATABLE)]\\nclass Contact extends Compound\\n{\\n  protected function getConstraints(array $options): array\\n  {\\n    return [\\n      new Assert\\\\Collection([\\n        'fields' => [\\n          'email' => [\\n            new Assert\\\\NotBlank(),\\n            new Assert\\\\Email(),\\n          ],\\n          'description' => [\\n            new Assert\\\\NotBlank(),\\n            new Assert\\\\Length(['min' => 10, 'max' => 255, 'message' => \\\"Lorem ipsum\\\"]),\\n          ],\\n        ],\\n      ]),\\n    ];\\n  }\\n}\\n\"\n          ),\n        ]),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"p\", [\n      _vm._v(\n        \"Attention à bien configurer votre contrainte en tant qu'attribute \"\n      ),\n      _c(\"code\", [_vm._v(\"#[\\\\Attribute()]\")]),\n      _vm._v(\" et la bonne combinaison de constantes.\"),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"use App\\\\Validator\\\\Constraints;\\n\\nclass Foobar\\n{\\n  #[Constraints/Contact]\\n  protected $contact;\\n}\\n\"\n          ),\n        ]),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"h2\", { attrs: { id: \"doctrine\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#doctrine\", \"aria-hidden\": \"true\" },\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Doctrine\"),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"use Doctrine\\\\DBAL\\\\Types\\\\Types;\\nuse Doctrine\\\\ORM\\\\Mapping AS ORM;\\n\\n#[ORM\\\\Entity(repositoryClass: PostRepository::class)]\\nclass Foobar\\n{\\n  #[ORM\\\\Column(type: Types::INTEGER)]\\n  #[ORM\\\\Id, ORM\\\\GeneratedValue(strategy: 'AUTO')]\\n  private ?int $id;\\n\\n  #[ORM\\\\Column(type: Types::BOOLEAN)]\\n  private bool $active = false;\\n\\n  #[ORM\\\\Column(type: Types::SIMPLE_ARRAY)]\\n  private array $contents = [];\\n\\n  #[ORM\\\\ManyToOne(targetEntity: User::class)]\\n  public $owner;\\n}\\n\"\n          ),\n        ]),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"p\", [\n      _vm._v(\n        \"Doctrine fait également face à l'impossibilité d'imbriquer les attributs comme cela était fait avec les annotations \"\n      ),\n      _c(\"code\", [_vm._v(\"@JoinTable\")]),\n      _vm._v(\" ou \"),\n      _c(\"code\", [_vm._v(\"@JoinColumns\")]),\n      _vm._v(\n        \" mais a résolu cela en créant de nouveaux attributs à placer au même niveau.\"\n      ),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            'class Post\\n{\\n  /**\\n   * @ManyToMany(targetEntity=\"Tag\")\\n   * @JoinTable(name=\"post_tags\",\\n   *   joinColumns={\\n   *     @JoinColumn(name=\"post_id\", referencedColumnName=\"id\")\\n   *   },\\n   *   inverseJoinColumns={\\n   *     @JoinColumn(name=\"tag_id\", referencedColumnName=\"id\")\\n   *   }\\n   * )\\n   */\\n   public Collection $tags;\\n}\\n'\n          ),\n        ]),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            'class Post\\n{\\n  #[ORM\\\\ManyToMany(targetEntity: Tag::class)]\\n  #[ORM\\\\JoinTable(name: \"post_tags\")]\\n  #[ORM\\\\JoinColumn(name: \"post_id\", referencedColumnName: \"id\")]\\n  #[ORM\\\\InverseJoinColumn(name: \"tag_id\", referencedColumnName: \"id\")]\\n  public Collection $tags;\\n}\\n'\n          ),\n        ]),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"h2\", { attrs: { id: \"conclusion\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#conclusion\", \"aria-hidden\": \"true\" },\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Conclusion\"),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}]}